 
import java.util.List;
import java.util.Optional;
 
import javax.servlet.http.HttpServletRequest;
 
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.AuthorityUtils;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;
import org.springframework.web.context.request.RequestAttributes;
import org.springframework.web.context.request.RequestContextHolder;
 
@Service
public class LoginService implements UserDetailsService {
 
    @Autowired
    LoginRepository userRepository;
     
    @Override
    public UserDetails loadUserByUsername(String name) throws UsernameNotFoundException {
 
        // LDUSERのロールを持ったユーザリストを生成取得
        List<GrantedAuthority> authorityList = AuthorityUtils.createAuthorityList("LDUSER");
         
        // パスワード取得
        RequestAttributes attrs = RequestContextHolder.getRequestAttributes();
        HttpServletRequest request = (HttpServletRequest) attrs.resolveReference(RequestAttributes.REFERENCE_REQUEST);
        String password = request.getParameter("password");
         
        // DBからユーザを特定
        Optional<Login> user = userRepository.findByName(name);
         
        // パスワードの整合性チェック
        if(user.isEmpty() == false && user.get().getPassword().equals(password)) {
	    Integer userId = user.get().getId();
            LoginUser liUser = new LoginUser(userId, name, password, authorityList);
            return liUser;
        }
        // 整合性取れない場合は例外発生
        throw new UsernameNotFoundException("User not found: " + name);
    }
 
}
